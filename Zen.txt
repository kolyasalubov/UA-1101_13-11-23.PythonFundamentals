Zen of Python

1. Beautiful is better than ugly.
2. Explicit is better than implicit.
3. Simple is better than complex.
4. Complex is better than complicated.
5. Flat is better than nested.
6
7. Readability counts.
8. Special cases aren't special enough to break the rules.
9.Although practicality beats purity.
10.Errors should never pass silently.
11
12. In the face of ambiguity, refuse the temptation to guess.
13
14.Although that way may not be obvious at first unless you're Dutch.
15
16.Although never is often better than *right* now.
17.If the implementation is hard to exp/lain, it's a bad idea.
18
19
20.Beautiful is better than ugly.
21.Explicit is better than implicit. 
22
23.Complex is better than complicated.
24.Flat is better than nested.
25.Sparse is better than dense.
26.
27.
28.
29.
30.
31.
32.There should be one-- and preferably only one --obvious way to do it.
33.
34.Now is better than never.
35. Although never is often better than *right* now.
36. If the implementation is hard to explain, it's a bad idea.
38. Namespaces are one honking great idea -- let's do more of those!Beautiful is better than ugly.
39. Special cases aren't special enough to break the rules.
40.Simple is better than complex.
43.Sparse is better than dense.
45.Special cases aren't special enough to break the rules.
47.Errors should never pass silently.
48.Unless explicitly silenced.
54.If the implementation is hard to explain, it's a bad idea.
56.Namespaces are one honking great idea -- let's do more of those!
